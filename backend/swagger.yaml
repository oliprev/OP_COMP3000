openapi: 3.0.0
info:
  title: COMP3000 API Documentation
  version: 1.0.0
  description: API documentation for my COMP3000 project.

servers:
  - url: http://localhost:9000/api

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /users/register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - dateOfBirth
                - experienceLevel
                - tosAccepted
                - privacyPolicyAccepted
              properties:
                name:
                  type: string
                  pattern: '^[a-zA-Z\s\-]+$'
                  example: John Doe
                  description: Must contain only letters, spaces, or hyphens
                email:
                  type: string
                  format: email
                  description: Must be a valid email fomrat
                password:
                  type: string
                  minLength: 8
                  description: Must be at least 8 characters long
                dateOfBirth:
                  type: string
                  format: date
                  description: Must be a valid date, cannot be in the future
                experienceLevel:
                  type: string
                  enum: [Beginner, Intermediate, Advanced]
                  description: Must be one of the following; Beginner, Intermediate, Advanced
                tosAccepted:
                  type: boolean
                  description: Terms of Service must be accepted
                privacyPolicyAccepted:
                  type: boolean
                  description: Privacy Policy must be accepted
      responses:
        '201':
          description: User created successfully
        '400':
          description: Validation error
  /users/login:
    post:
      summary: Login a user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: Must be a valid email format
                password:
                  type: string
                  minLength: 8
                  description: Must be at least 8 characters long
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
                  userId:
                    type: string
                    description: ID of the logged-in user
                  experienceLevel:
                    type: string
                    enum: [Beginner, Intermediate, Advanced]
                    description: User's experience level
        '400':
          description: Validation error